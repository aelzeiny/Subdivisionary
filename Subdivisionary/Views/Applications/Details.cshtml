@using System.Data.Entity.Core.Objects
@using Subdivisionary.Helpers
@using Subdivisionary.Models.Forms
@using Subdivisionary.Models.ProjectInfos
@using Subdivisionary.ViewModels
@using Subdivisionary.ViewModels.ApplicationViewModels
@model Subdivisionary.ViewModels.ApplicationViewModels.EditApplicationViewModel
@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_BannerLayout.cshtml";
    ViewBag.Banner = Model.Application.DisplayName;
}

@{
    IForm activeForm = Model.Form;
    var allSubmitted = Model.Application.AllFormsSubmitted();
    var iconSubmitted = "fa fa-check";
    var iconPending = "fa fa-circle-o";
    var iconOptional = "fa fa-circle";
}
<div class="row">
    <div class="sidebar col-xs-0 col-md-3">
        <h2>Directory</h2>
        <ul class="nav nav-pills nav-stacked">
            @for (int i = 0; i < Model.Forms.Count; i++)
            {
                var form = Model.Forms[i];
                string liClass = null;
                if ((Model.FormId <= 0 && form is BasicProjectInfo) || (Model.FormId == form.Id && !(form is BasicProjectInfo)))
                {
                    liClass = "active";
                    if (activeForm == null)
                    {
                        activeForm = form;
                    }
                }
                var icon = form.IsAssigned ? iconSubmitted : (form.IsRequired ? iconPending : iconOptional);
                <li role="presentation" class="@liClass">
                    <a href="@Url.Action( "Details", "Applications", new {formId = form is BasicProjectInfo ? 0 : form.Id}, null)" class="list-group-item">
                        @form.DisplayName
                        <div class="badge">
                            <i class="@icon" aria-hidden="true"></i>
                        </div>
                    </a>
                </li>
            }
            @if (allSubmitted)
            {
                <li role="presentation" class="liClass">
                    <a href="@Url.Action("Review", "Applications", new {id = Model.Application.Id})" class="list-group-item">
                        Review Application
                        <div class="badge">
                            <i class="fa fa-share" aria-hidden="true"></i>
                        </div>
                    </a>
                </li>
            }
            else
            {
                <li role="presentation" class="liClass disabled">
                    <a class="list-group-item">
                        Review Application
                        <div class="badge disabled">
                            <i class="fa fa-share" aria-hidden="true"></i>
                        </div>
                    </a>
                </li>
            }
        </ul>
        <a class="btn btn-primary btn-xs" href="@Url.Action("Share", "Applications", new {id = Model.Application.Id})" role="button" style="float: right;">
            <i class="fa fa-share-alt"></i>
            Invite
        </a>
        <h4>Legend:</h4>
        <table class="table table-condensed table-hover">
            <tr>
                <th>Submitted and Saved</th>
                <td><i class="@iconSubmitted"></i></td>
            </tr>
            <tr>
                <th>Pending, but Optional</th>
                <td><i class="@iconOptional"></i></td>
            </tr>
            <tr>
                <th>Pending and Required</th>
                <td><i class="@iconPending"></i></td>
            </tr>
        </table>
    </div>
    <div class="partialbar col-xs-12 col-md-9">
        <h2>@activeForm.DisplayName</h2>
        @{
            var formEditor = new EditFormViewModel()
            {
                Form = activeForm,
                FormId = Model.FormId,
                ApplicationId = Model.Application.Id,
            };
        }
        @Html.Partial("_FormEditor", formEditor)
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/Scripts/site-js/site-disableCheckboxes.js")
    @if (activeForm is UploadableFileForm)
    {
        @Scripts.Render("~/Scripts/site-js/site-fileinput.js")
    }
    @if (activeForm is ISignatureForm)
    {
        @Scripts.Render("~/Scripts/site-js/site-jsignature.js")
    }
    @if (activeForm is ICollectionForm)
    {
        @Scripts.Render("~/Scripts/site-js/site-icollection.js")
    }

    @{
        // Get Javascript file from active form type
        var mt = ObjectContext.GetObjectType(activeForm.GetType());
        var ooScripts = CustomHtmlHelper.GetAllSubtypes(mt);
    }
    @foreach (var script in ooScripts)
    {
        @Scripts.Render($"~/Scripts/site-js/FormScripts/{script.Name}.js")
    }
}
